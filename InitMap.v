`include "define.v"

module InitMap (
    input reset,
    output reg [`tile_col_num * `tile_row_num - 1:0] tilemap_dots,
    output reg [`tile_col_num * `tile_row_num - 1:0] tilemap_big_dots
);

    // wire [`tile_col_num * `tile_row_num - 1:0] init_dots;
    // wire [`tile_col_num * `tile_row_num - 1:0] init_big_dots;

    // integer i;
    // reg [`tile_col_num - 1:0] temp [0: `tile_row_num - 1];

    // initial begin
        // $readmemb("./maps/walls.txt", temp);
        // for (i = 0; i < `tile_row_num; i = i + 1) begin
        //     init_walls[i * `tile_col_num +: `tile_col_num] = temp[i];
        // end
        // $readmemb("./maps/dots.txt", temp);
        // for (i = 0; i < `tile_row_num; i = i + 1) begin
        //     init_dots[i * `tile_col_num +: `tile_col_num] = temp[i];
        // end
        // $readmemb("./maps/big_dots.txt", temp);
        // for (i = 0; i < `tile_row_num; i = i + 1) begin
        //     init_big_dots[i * `tile_col_num +: `tile_col_num] = temp[i];
        // end
    // end

    always @(negedge reset) begin
        tilemap_dots <=     768'b
        tilemap_big_dots <= 768'b
    end

endmodule